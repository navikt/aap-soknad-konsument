no.nav:
  security:
    jwt:
      client:
        registration:
          localhost:
            token-exchange:
              audience: someaudience
            well-known-url: ${mock-oauth2-server.baseUrl}/idporten/.well-known/openid-configuration
            grant-type: urn:ietf:params:oauth:grant-type:token-exchange
            authentication:
              client-id: id
              client-jwk: src/test/resources/jwk.json
              client-auth-method: private_key_jwt
      issuer:
        idporten:
          discovery-url: ${mock-oauth2-server.baseUrl}/idporten/.well-known/openid-configuration
          accepted-audience: someaudience
proxy:
  base-uri: ${mock-oauth2-server.baseUrl}/proxy

spring:
  kafka:
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      acks: 1
    consumer:
      properties:
        spring:
          json:
             trusted:
                packages: no.nav.aap.api.s√∏knad.model
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      group-id: test
utenlands:
  topic: test